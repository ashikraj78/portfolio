[{"/home/ashik/Desktop/altcampus/portfolio/src/index.js":"1","/home/ashik/Desktop/altcampus/portfolio/src/App.js":"2","/home/ashik/Desktop/altcampus/portfolio/src/reportWebVitals.js":"3","/home/ashik/Desktop/altcampus/portfolio/src/components/Navbar.js":"4","/home/ashik/Desktop/altcampus/portfolio/src/components/Skill.js":"5","/home/ashik/Desktop/altcampus/portfolio/src/components/Projects.js":"6","/home/ashik/Desktop/altcampus/portfolio/src/components/Contact.js":"7","/home/ashik/Desktop/altcampus/portfolio/src/components/Hero.js":"8"},{"size":500,"mtime":1608281910736,"results":"9","hashOfConfig":"10"},{"size":535,"mtime":1609826803045,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1608281910736,"results":"12","hashOfConfig":"10"},{"size":670,"mtime":1609827492050,"results":"13","hashOfConfig":"10"},{"size":2435,"mtime":1608808725955,"results":"14","hashOfConfig":"10"},{"size":2715,"mtime":1609824508319,"results":"15","hashOfConfig":"10"},{"size":3447,"mtime":1608970470184,"results":"16","hashOfConfig":"10"},{"size":806,"mtime":1609824907736,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1ace9h4",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ashik/Desktop/altcampus/portfolio/src/index.js",[],["36","37"],"/home/ashik/Desktop/altcampus/portfolio/src/App.js",[],"/home/ashik/Desktop/altcampus/portfolio/src/reportWebVitals.js",[],"/home/ashik/Desktop/altcampus/portfolio/src/components/Navbar.js",["38","39","40","41","42"],"/home/ashik/Desktop/altcampus/portfolio/src/components/Skill.js",[],"/home/ashik/Desktop/altcampus/portfolio/src/components/Projects.js",["43","44","45"],"/home/ashik/Desktop/altcampus/portfolio/src/components/Contact.js",["46"],"import React from \"react\";\nimport { useFormik } from \"formik\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure();\n\nfunction validator(values) {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"*Name is required\";\n  }\n  if (!values.email) {\n    errors.email = \"*Email is required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n  if (!values.message) {\n    errors.message = \"*Message is required\";\n  }\n  return errors;\n}\nexport default function Contact() {\n  const notify = () =>\n    toast.success(\"Sending Message !\", {\n      position: toast.POSITION.BOTTOM_RIGHT,\n    });\n  const { handleSubmit, handleChange, values, errors, handleReset } = useFormik(\n    {\n      initialValues: {\n        name: \"\",\n        email: \"\",\n        message: \"\",\n      },\n      validateOnBlur: false,\n      validateOnChange: false,\n      validate: validator,\n      onSubmit: (values) => {\n        handleClick();\n        handleReset();\n      },\n    }\n  );\n\n  function handleClick() {\n    fetch(\"https://formspree.io/f/xayllbee\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(values),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result);\n      })\n      .catch((error) => console.log(error));\n  }\n  return (\n    <div className=\"mb-10\">\n      <h2 className=\"text-center text-4xl font-semibold mb-4\">Get In Touch</h2>\n      <div className=\"w-7/12 text-center contentCenter\">\n        <p>\n          I am currently looking for new opportunities, my inbox is always open.\n          Whether you have a question or just want to say hi, I'll try my best\n          to get back to you!\n        </p>\n      </div>\n      <div className=\"pl-72\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-4 mt-6\">\n            <label htmlFor=\"name\"> Name</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={values.name}\n              onChange={handleChange}\n              className=\"border border-gray-300 rounded-md block w-3/5\"\n            />\n            <small className=\"pb-10 text-red-700\">{errors.name}</small>\n          </div>\n          <div className=\"mb-4\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              name=\"email\"\n              value={values.email}\n              onChange={handleChange}\n              className=\"border border-gray-300 rounded-md  block w-3/5\"\n            />\n            <small className=\"pb-10 text-red-700\">{errors.email}</small>\n          </div>\n          <div className=\"mb-4\">\n            <label>Message</label>\n            <textarea\n              name=\"message\"\n              cols=\"30\"\n              rows=\"5\"\n              value={values.message}\n              onChange={handleChange}\n              className=\"border border-gray-300 rounded-md block w-3/5\"\n            ></textarea>\n            <small className=\"pb-10 text-red-700\">{errors.message}</small>\n          </div>\n          <button\n            type=\"submit\"\n            onClick={notify}\n            className=\" py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-gray-600 hover:bg-gray-500 \"\n          >\n            Submit\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/home/ashik/Desktop/altcampus/portfolio/src/components/Hero.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":10,"column":9,"nodeType":"53","endLine":10,"endColumn":37},{"ruleId":"51","severity":1,"message":"52","line":13,"column":9,"nodeType":"53","endLine":13,"endColumn":37},{"ruleId":"51","severity":1,"message":"52","line":16,"column":9,"nodeType":"53","endLine":16,"endColumn":37},{"ruleId":"51","severity":1,"message":"52","line":19,"column":9,"nodeType":"53","endLine":19,"endColumn":37},{"ruleId":"51","severity":1,"message":"52","line":22,"column":9,"nodeType":"53","endLine":25,"endColumn":10},{"ruleId":"54","severity":1,"message":"55","line":20,"column":7,"nodeType":"56","messageId":"57","endLine":20,"endColumn":29},{"ruleId":"58","severity":1,"message":"59","line":55,"column":38,"nodeType":"60","endLine":55,"endColumn":53},{"ruleId":"58","severity":1,"message":"59","line":60,"column":35,"nodeType":"60","endLine":60,"endColumn":50},{"ruleId":"61","severity":1,"message":"62","line":3,"column":10,"nodeType":"63","messageId":"64","endLine":3,"endColumn":24},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-unused-vars","'ToastContainer' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]