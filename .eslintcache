[{"/home/ashik/Desktop/altcampus/portfolio/src/index.js":"1","/home/ashik/Desktop/altcampus/portfolio/src/App.js":"2","/home/ashik/Desktop/altcampus/portfolio/src/reportWebVitals.js":"3","/home/ashik/Desktop/altcampus/portfolio/src/components/Navbar.js":"4","/home/ashik/Desktop/altcampus/portfolio/src/components/Skill.js":"5","/home/ashik/Desktop/altcampus/portfolio/src/components/Projects.js":"6","/home/ashik/Desktop/altcampus/portfolio/src/components/Contact.js":"7","/home/ashik/Desktop/altcampus/portfolio/src/components/Hero.js":"8","/home/ashik/Desktop/altcampus/portfolio/src/components/Social.js":"9"},{"size":500,"mtime":1609926366881,"results":"10","hashOfConfig":"11"},{"size":711,"mtime":1609926366881,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1609926366881,"results":"13","hashOfConfig":"11"},{"size":887,"mtime":1609931213111,"results":"14","hashOfConfig":"11"},{"size":2941,"mtime":1609930682681,"results":"15","hashOfConfig":"11"},{"size":3011,"mtime":1609929745503,"results":"16","hashOfConfig":"11"},{"size":3452,"mtime":1609926366881,"results":"17","hashOfConfig":"11"},{"size":905,"mtime":1609926366881,"results":"18","hashOfConfig":"11"},{"size":1728,"mtime":1609931142641,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1w95btg",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ashik/Desktop/altcampus/portfolio/src/index.js",[],["42","43"],"/home/ashik/Desktop/altcampus/portfolio/src/App.js",["44"],"import \"./App.css\";\nimport \"./style/style.css\";\nimport Navbar from \"./components/Navbar\";\nimport Skill from \"./components/Skill\";\nimport Projects from \"./components/Projects\";\nimport Contact from \"./components/Contact\";\nimport Hero from \"./components/Hero\";\nimport Social from \"./components/Social\";\nimport { Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"relative\">\n      <div className=\"pl-12 pr-12  mt-6 \">\n        <Navbar />\n      </div>\n      <div className=\"pl-40 pr-40\">\n        <Hero />\n        <Skill />\n        <Projects />\n        <Contact />\n      </div>\n      <div className=\"pl-16 pr-16 \">\n        <Social />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/ashik/Desktop/altcampus/portfolio/src/reportWebVitals.js",[],"/home/ashik/Desktop/altcampus/portfolio/src/components/Navbar.js",["45"],"/home/ashik/Desktop/altcampus/portfolio/src/components/Skill.js",[],"/home/ashik/Desktop/altcampus/portfolio/src/components/Projects.js",["46","47","48","49"],"import React, { useState } from \"react\";\nimport { projects } from \"../projects.json\";\nimport TestImg from \"../images/1.png\";\n\nexport default function Projects() {\n  const [filterProjects, setFrilterProjects] = useState(projects);\n  let [languages, setLanguages] = useState(\n    [\n      ...new Set(projects.map((project) => project.language).flat()),\n    ].map((lang) => ({ label: lang, checked: false }))\n  );\n  function handleClick(lang) {\n    let showProjects = projects.filter((pro) => pro.language.includes(lang));\n    setFrilterProjects(showProjects);\n\n    let clickedLanguages = languages.map((singleLanguage) => {\n      if (singleLanguage.label === lang) {\n        return { ...singleLanguage, checked: !singleLanguage.checked };\n      } else {\n        return { ...singleLanguage, checked: false };\n      }\n      return singleLanguage;\n    });\n    setLanguages(clickedLanguages);\n  }\n  return (\n    <section id=\"project\" className=\"mb-10\">\n      <h2 className=\"mb-10 text-center font-semibold sheading \">Projects</h2>\n      <div className=\"flex justify-between \">\n        {languages.map((l) => (\n          <li className=\"list-none \">\n            <button\n              onClick={() => handleClick(l.label)}\n              className={`border-solid border border-gray-200 px-8 py-2 rounded-md font-mono lang_btn  ${\n                l.checked ? \"activeclass\" : \"\"\n              }`}\n            >\n              {l.label}\n            </button>\n          </li>\n        ))}\n      </div>\n      <div className=\"flex flex-wrap justify-between mt-10\">\n        {filterProjects.map((proj) => (\n          <div className=\"border-solid border border-gray-300 px-2 py-2 rounded-md singleproject mt-4 one_third bg-white project_display\">\n            <h3 className=\"text-xl font-semibold text-gray-500 text-center mb-8 mt-4\">\n              {proj.title}\n            </h3>\n            <img\n              src={require(`../images/${proj.sku}.png`).default}\n              alt=\"project\"\n            />\n            <p className=\"text-gray-500 mb-1 mt-2 h-24 text-center \">\n              {proj.details}\n            </p>\n            <div className=\"p_display\">\n              <div className=\" justify-between mb-4 flex\">\n                {/* <button className=\"border-solid border border-gray-500 px-4 py-2 rounded-3xl\">\n                Preview\n              </button> */}\n                <a href={proj.website} target=\"_blank\">\n                  <button className=\"border-solid border border-gray-200 px-8 py-2 rounded-md lang_btn font-mono\">\n                    Demo\n                  </button>\n                </a>\n                <a href={proj.code} target=\"_blank\">\n                  <button className=\"border-solid border border-gray-200 px-8 py-2 rounded-md lang_btn font-mono\">\n                    {/* <img src=\"/images/github.png\" alt=\"github\" /> */}\n                    Code\n                  </button>\n                </a>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n}\n","/home/ashik/Desktop/altcampus/portfolio/src/components/Contact.js",["50"],"import React from \"react\";\nimport { useFormik } from \"formik\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure();\n\nfunction validator(values) {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"*Name is required\";\n  }\n  if (!values.email) {\n    errors.email = \"*Email is required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n  if (!values.message) {\n    errors.message = \"*Message is required\";\n  }\n  return errors;\n}\nexport default function Contact() {\n  const notify = () =>\n    toast.success(\"Sending Message !\", {\n      position: toast.POSITION.BOTTOM_RIGHT,\n    });\n  const { handleSubmit, handleChange, values, errors, handleReset } = useFormik(\n    {\n      initialValues: {\n        name: \"\",\n        email: \"\",\n        message: \"\",\n      },\n      validateOnBlur: false,\n      validateOnChange: false,\n      validate: validator,\n      onSubmit: (values) => {\n        handleClick();\n        handleReset();\n      },\n    }\n  );\n\n  function handleClick() {\n    fetch(\"https://formspree.io/f/xayllbee\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(values),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result);\n      })\n      .catch((error) => console.log(error));\n  }\n  return (\n    <div id=\"contact\" className=\"mb-10\">\n      <h2 className=\"text-center font-semibold mb-4 sheading\">Get In Touch</h2>\n      <div className=\"w-7/12 text-center contentCenter\">\n        <p>\n          I am currently looking for new opportunities, my inbox is always open.\n          Whether you have a question or just want to say hi, I'll try my best\n          to get back to you!\n        </p>\n      </div>\n      <div className=\"pl-72\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-4 mt-6\">\n            <label htmlFor=\"name\"> Name</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={values.name}\n              onChange={handleChange}\n              className=\"border border-gray-300 rounded-md block w-3/5 pt-1 pb-1 pl-2\"\n            />\n            <small className=\"pb-10 text-red-700\">{errors.name}</small>\n          </div>\n          <div className=\"mb-4\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              name=\"email\"\n              value={values.email}\n              onChange={handleChange}\n              className=\"border border-gray-300 rounded-md  block w-3/5 pt-1 pb-1 pl-2\"\n            />\n            <small className=\"pb-10 text-red-700\">{errors.email}</small>\n          </div>\n          <div className=\"mb-4\">\n            <label>Message</label>\n            <textarea\n              name=\"message\"\n              cols=\"30\"\n              rows=\"5\"\n              value={values.message}\n              onChange={handleChange}\n              className=\"border border-gray-300 rounded-md block w-3/5 pt-1 pb-1 pl-2\"\n            ></textarea>\n            <small className=\"pb-10 text-red-700\">{errors.message}</small>\n          </div>\n          <button\n            type=\"submit\"\n            onClick={notify}\n            className=\" py-2 px-4 lang_btn border text-sm font-mono rounded-md \"\n          >\n            Submit\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/home/ashik/Desktop/altcampus/portfolio/src/components/Hero.js",[],"/home/ashik/Desktop/altcampus/portfolio/src/components/Social.js",["51","52","53","54"],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":9,"column":10,"nodeType":"61","messageId":"62","endLine":9,"endColumn":16},{"ruleId":"59","severity":1,"message":"63","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":14},{"ruleId":"59","severity":1,"message":"64","line":3,"column":8,"nodeType":"61","messageId":"62","endLine":3,"endColumn":15},{"ruleId":"65","severity":1,"message":"66","line":22,"column":7,"nodeType":"67","messageId":"68","endLine":22,"endColumn":29},{"ruleId":"69","severity":1,"message":"70","line":61,"column":40,"nodeType":"71","endLine":61,"endColumn":55},{"ruleId":"69","severity":1,"message":"70","line":66,"column":37,"nodeType":"71","endLine":66,"endColumn":52},{"ruleId":"59","severity":1,"message":"72","line":3,"column":10,"nodeType":"61","messageId":"62","endLine":3,"endColumn":24},{"ruleId":"69","severity":1,"message":"70","line":12,"column":51,"nodeType":"71","endLine":12,"endColumn":66},{"ruleId":"69","severity":1,"message":"70","line":17,"column":58,"nodeType":"71","endLine":17,"endColumn":73},{"ruleId":"69","severity":1,"message":"70","line":22,"column":51,"nodeType":"71","endLine":22,"endColumn":66},{"ruleId":"69","severity":1,"message":"70","line":29,"column":13,"nodeType":"71","endLine":29,"endColumn":28},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'TestImg' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'ToastContainer' is defined but never used.","no-global-assign","no-unsafe-negation"]